a = [0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100]

# 시퀀스 자료형에 특정 값의 존재 여부 확인하는 방법
print(30 in a) # True
print(5 in a) # False
print(30 not in a) #False
print(12 not in a) # True

# 시퀀스 객체 연결하기
b = [0, 1, 2]
c = [2, 3, 4, 5]
print(b+c) # [0, 1, 2, 2, 3, 4, 5] 중복된 요소도 따로 표시됨.

# range 와 range는 합칠 수 없음
# range(0, 10) + range(10, 20)는 문법 오류

# range와 range를 합치려면 리스트와 튜플을 이용한다.
d = list(range(0, 10)) + list(range(10, 20))
print(d) # [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]

e = tuple(range(0, 10)) + tuple(range(10, 20))
print(e) # (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19)

#문자열과 숫자 연결하는 방법
# print('Hello, ' + 10)는 문법오류
print('Hello, ' + str(10)) # 정상 출력

#시퀀스 객체 반복하기
f = [0, 1, 2] * 3
print(f) # [0, 1, 2, 0, 1, 2, 0, 1, 2]

# range는 반복할 수 없다.
# f = range(0, 3) * 3는 문법 오류

# 시퀀스 객체의 요소 개수 구하기
g = [0, 10, 20, 30, 40, 50, 60, 70, 80, 90]
print(len(g)) # 10

#문자열의 길이 구하기(한글도 가능. 단 버전별로 리턴값이 다름)
h = 'Hello, World'
print(len(h)) #12

# del로 요소 삭제하기
i = [38, 21, 58, 62, 16]
del(i[2]) # 2번 인덱스 삭제
print(i) # [38, 21, 62, 16]

#슬라이스 사용하기
j = [0, 10, 20, 30, 40, 50]
j = j[0:4] #[시작인덱스:끝인덱스]
print(j) # [0, 10, 20, 30]

#슬라이스 시작 인덱스가 없을 때는 첫 인덱스부터 가져온다.
k = [0, 10, 20, 30, 40, 50]
k = k[:3]
print(k) # [0, 10, 20]

#슬라이스 끝 인덱스가 없을 때는 마지막 인덱스까지 가져온다.
l = [0, 10, 20, 30, 40, 50]
l = l[2:]
print(l) # [20, 30, 40, 50]

#슬라이스의 인덱스가 아무것도 없을 때는 전체를 가져온다.
m = [0, 10, 20, 30, 40, 50]
m = m[:]
print(m) # [0, 10, 20, 30, 40, 50]

#시퀀스 객체를 역순으로 정렬하는 방법(튜플도 가능)
n = [0, 10, 20, 30, 40, 50, 60, 70, 80, 90]
n = n[::-1]
print(n) # [90, 80, 70, 60, 50, 40, 30, 20 ,10, 0]

#읽기 전용 시퀀스 객체는 요소의 값 자체를 바꿀 순 없지만 순서의 변경은 가능하다.

#슬라이스와 동시에 요소 할당하기
o = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
o[2:5] = ['a', 'b', 'c']
print(o) # [0, 1, 'a', 'b', 'c', 5, 6, 7, 8, 9]

#del로 슬라이스 삭제하기
p = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
del p[3:7]
print(p)
